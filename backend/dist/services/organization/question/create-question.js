import u from'../../../lib/db';import {question}from'../../../lib/db/schema';import {sql,and,ne,gte,eq}from'drizzle-orm';async function y(i){return await u.transaction(async r=>{const o=[];for(const t of i){const n=(await r.insert(question).values({...t,pointValue:t.type==="point-based"?5:void 0}).returning()).at(0);if(!n)throw new Error("Failed to create question");const s=n.id;await r.update(question).set({order:sql`${question.order}+1`}).where(and(ne(question.id,s),gte(question.order,t.order||1),eq(question.referenceId,t.referenceId))),o.push(n);}return o})}export{y as createQuestion};//# sourceMappingURL=create-question.js.map
//# sourceMappingURL=create-question.js.map