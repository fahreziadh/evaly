{"version":3,"sources":["../../../../src/lib/db/schema/test.ts"],"names":["test","pgTable","varchar","ulid","boolean","text","timestamp","sql"],"mappings":"gIAUO,MAAMA,CAAOC,CAAAA,OAAAA,CAAQ,OAAQ,CAClC,EAAA,CAAIC,QAAQ,IAAM,CAAA,CAAE,OAAQ,GAAI,CAAC,EAC9B,UAAW,EAAA,CACX,WAAW,IAAM,KAAA,CAAQC,MAAM,CAAA,CAClC,MAAOD,OAAQ,CAAA,OAAA,CAAS,CAAE,MAAA,CAAQ,GAAI,CAAC,CAAA,CACvC,KAAMA,OAAQ,CAAA,MAAA,CAAQ,CAAE,MAAQ,CAAA,EAAA,CAAI,KAAM,CAAC,MAAA,CAAQ,YAAY,CAAE,CAAC,EAAE,OAAQ,CAAA,YAAY,EAAE,OAAQ,EAAA,CAClG,MAAQA,CAAAA,OAAAA,CAAQ,SAAU,CAAC,MAAA,CAAQ,GAAI,IAAM,CAAA,CAAC,SAAU,aAAa,CAAC,CAAC,CACvE,CAAA,WAAA,CAAaE,QAAQ,cAAc,CAAA,CAAE,QAAQ,KAAK,CAAA,CAClD,YAAaC,IAAK,CAAA,aAAa,CAC/B,CAAA,oBAAA,CAAsBH,QAAQ,yBAA2B,CAAA,CACvD,OAAQ,GACV,CAAC,EAAE,OAAQ,EAAA,CACX,cAAgBA,CAAAA,OAAAA,CAAQ,kBAAmB,CAAE,MAAA,CAAQ,GAAI,CAAC,CAAA,CAAE,SAC5D,CAAA,MAAA,CAAQI,SAAU,CAAA,SAAA,CAAW,CAC3B,IAAM,CAAA,QAAA,CACN,aAAc,IAChB,CAAC,EACD,UAAYA,CAAAA,SAAAA,CAAU,cAAe,CACnC,IAAA,CAAM,SACN,YAAc,CAAA,IAChB,CAAC,CACD,CAAA,SAAA,CAAWA,UAAU,YAAc,CAAA,CACjC,IAAM,CAAA,QAAA,CACN,aAAc,IAChB,CAAC,EACE,OAAQ,EAAA,CACR,QAAQC,GAAsB,CAAA,iBAAA,CAAA,CAAA,CACjC,UAAWD,SAAU,CAAA,YAAA,CAAc,CACjC,IAAM,CAAA,QAAA,CACN,aAAc,IAChB,CAAC,EACE,OAAQ,EAAA,CACR,OAAQC,CAAAA,GAAAA,CAAAA,iBAAAA,CAAsB,EAC9B,SAAU,CAAA,IAAM,IAAI,IAAK,EAAA,CAAE,aAAa,CAAA,CAC3C,UAAWD,SAAU,CAAA,YAAA,CAAc,CACjC,IAAM,CAAA,QAAA,CACN,aAAc,IAChB,CAAC,CACH,CAAC","file":"test.js","sourcesContent":["import { sql } from \"drizzle-orm\";\nimport {\n  boolean,\n  pgTable,\n  text,\n  timestamp,\n  varchar,\n} from \"drizzle-orm/pg-core\";\nimport { ulid } from \"ulidx\";\n\nexport const test = pgTable(\"test\", {\n  id: varchar(\"id\", { length: 255 })\n    .primaryKey()\n    .$defaultFn(() => \"ts-\" + ulid()),\n  title: varchar(\"title\", { length: 255 }),\n  type: varchar(\"type\", { length: 20, enum: [\"live\", \"self-paced\"] }).default(\"self-paced\").notNull(),\n  access: varchar(\"access\", {length: 20, enum: [\"public\", \"invite-only\"]}),\n  isPublished: boolean(\"is_published\").default(false),\n  description: text(\"description\"),\n  createdByOrganizerId: varchar(\"created_by_organizer_id\", { // Someone that created this test\n    length: 255,\n  }).notNull(),\n  organizationId: varchar(\"organization_id\", { length: 255 }).notNull(), // Organization that owned this test\n  heldAt: timestamp(\"held_at\", {\n    mode: \"string\",\n    withTimezone: true,\n  }),\n  finishedAt: timestamp(\"finished_at\", {\n    mode: \"string\",\n    withTimezone: true,\n  }),\n  createdAt: timestamp(\"created_at\", {\n    mode: \"string\",\n    withTimezone: true,\n  })\n    .notNull()\n    .default(sql`CURRENT_TIMESTAMP`),\n  updatedAt: timestamp(\"updated_at\", {\n    mode: \"string\",\n    withTimezone: true,\n  })\n    .notNull()\n    .default(sql`CURRENT_TIMESTAMP`)\n    .$onUpdate(() => new Date().toISOString()),\n  deletedAt: timestamp(\"deleted_at\", {\n    mode: \"string\",\n    withTimezone: true,\n  }),\n});"]}