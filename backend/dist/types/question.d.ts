import * as drizzle_typebox from 'drizzle-typebox';
import * as _sinclair_typebox from '@sinclair/typebox';
import { MediaType } from './media.js';
import * as drizzle_orm_pg_core from 'drizzle-orm/pg-core';
import { question } from '../lib/db/schema/question.js';
export { QuestionType } from './question-types.js';
import 'drizzle-orm';

type Question = typeof question.$inferSelect;
type InsertQuestion = typeof question.$inferInsert;
type UpdateQuestion = Partial<InsertQuestion>;
declare const ValidatedInsertQuestion: drizzle_typebox.BuildSchema<"insert", {
    id: drizzle_orm_pg_core.PgColumn<{
        name: "id";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: true;
        isAutoincrement: false;
        hasRuntimeDefault: true;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    question: drizzle_orm_pg_core.PgColumn<{
        name: "question";
        tableName: "question";
        dataType: "string";
        columnType: "PgText";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    referenceId: drizzle_orm_pg_core.PgColumn<{
        name: "reference_id";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    referenceType: drizzle_orm_pg_core.PgColumn<{
        name: "reference_type";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: "test-session" | "template" | "ai-generated";
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: ["test-session", "template", "ai-generated"];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    organizationId: drizzle_orm_pg_core.PgColumn<{
        name: "organization_id";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    order: drizzle_orm_pg_core.PgColumn<{
        name: "order";
        tableName: "question";
        dataType: "number";
        columnType: "PgSmallInt";
        data: number;
        driverParam: string | number;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    type: drizzle_orm_pg_core.PgColumn<{
        name: "type";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: "multiple-choice" | "yes-or-no" | "point-based" | "text-field" | "file-upload" | "fill-the-blank" | "audio-response" | "video-response" | "dropdown" | "matching-pairs" | "slider-scale" | "ranking" | "hotspot" | "drag-and-drop" | "matrix" | "likert-scale" | "open-ended" | "code-snippet" | "math-formula" | "drawing";
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: ["multiple-choice", "yes-or-no", "point-based", "text-field", "file-upload", "fill-the-blank", "audio-response", "video-response", "dropdown", "matching-pairs", "slider-scale", "ranking", "hotspot", "drag-and-drop", "matrix", "likert-scale", "open-ended", "code-snippet", "math-formula", "drawing"];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 20;
    }>;
    pointValue: drizzle_orm_pg_core.PgColumn<{
        name: "point_value";
        tableName: "question";
        dataType: "number";
        columnType: "PgSmallInt";
        data: number;
        driverParam: string | number;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    options: drizzle_orm_pg_core.PgColumn<{
        name: "options";
        tableName: "question";
        dataType: "json";
        columnType: "PgJsonb";
        data: {
            id: string;
            text: string;
            isCorrect: boolean;
            mediaUrl?: string;
            mediaType?: MediaType;
            pointValue?: number;
        }[];
        driverParam: unknown;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        $type: {
            id: string;
            text: string;
            isCorrect: boolean;
            mediaUrl?: string;
            mediaType?: MediaType;
            pointValue?: number;
        }[];
    }>;
    allowMultipleAnswers: drizzle_orm_pg_core.PgColumn<{
        name: "allow_multiple_answers";
        tableName: "question";
        dataType: "boolean";
        columnType: "PgBoolean";
        data: boolean;
        driverParam: boolean;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    createdAt: drizzle_orm_pg_core.PgColumn<{
        name: "created_at";
        tableName: "question";
        dataType: "string";
        columnType: "PgTimestampString";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    updatedAt: drizzle_orm_pg_core.PgColumn<{
        name: "updated_at";
        tableName: "question";
        dataType: "string";
        columnType: "PgTimestampString";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    deletedAt: drizzle_orm_pg_core.PgColumn<{
        name: "deleted_at";
        tableName: "question";
        dataType: "string";
        columnType: "PgTimestampString";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
}, {
    options: _sinclair_typebox.TOptional<_sinclair_typebox.TUnion<[_sinclair_typebox.TArray<_sinclair_typebox.TObject<{
        id: _sinclair_typebox.TString;
        text: _sinclair_typebox.TString;
        isCorrect: _sinclair_typebox.TBoolean;
        mediaUrl: _sinclair_typebox.TOptional<_sinclair_typebox.TString>;
        mediaType: _sinclair_typebox.TOptional<_sinclair_typebox.TUnion<[_sinclair_typebox.TLiteral<"image">, _sinclair_typebox.TLiteral<"video">, _sinclair_typebox.TLiteral<"audio">, _sinclair_typebox.TLiteral<"file">]>>;
        pointValue: _sinclair_typebox.TOptional<_sinclair_typebox.TNumber>;
    }>>, _sinclair_typebox.TNull]>>;
}>;
declare const ValidatedUpdateQuestion: drizzle_typebox.BuildSchema<"update", {
    id: drizzle_orm_pg_core.PgColumn<{
        name: "id";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: true;
        isAutoincrement: false;
        hasRuntimeDefault: true;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    question: drizzle_orm_pg_core.PgColumn<{
        name: "question";
        tableName: "question";
        dataType: "string";
        columnType: "PgText";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    referenceId: drizzle_orm_pg_core.PgColumn<{
        name: "reference_id";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    referenceType: drizzle_orm_pg_core.PgColumn<{
        name: "reference_type";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: "test-session" | "template" | "ai-generated";
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: ["test-session", "template", "ai-generated"];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 100;
    }>;
    organizationId: drizzle_orm_pg_core.PgColumn<{
        name: "organization_id";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: [string, ...string[]];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 255;
    }>;
    order: drizzle_orm_pg_core.PgColumn<{
        name: "order";
        tableName: "question";
        dataType: "number";
        columnType: "PgSmallInt";
        data: number;
        driverParam: string | number;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    type: drizzle_orm_pg_core.PgColumn<{
        name: "type";
        tableName: "question";
        dataType: "string";
        columnType: "PgVarchar";
        data: "multiple-choice" | "yes-or-no" | "point-based" | "text-field" | "file-upload" | "fill-the-blank" | "audio-response" | "video-response" | "dropdown" | "matching-pairs" | "slider-scale" | "ranking" | "hotspot" | "drag-and-drop" | "matrix" | "likert-scale" | "open-ended" | "code-snippet" | "math-formula" | "drawing";
        driverParam: string;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: ["multiple-choice", "yes-or-no", "point-based", "text-field", "file-upload", "fill-the-blank", "audio-response", "video-response", "dropdown", "matching-pairs", "slider-scale", "ranking", "hotspot", "drag-and-drop", "matrix", "likert-scale", "open-ended", "code-snippet", "math-formula", "drawing"];
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        length: 20;
    }>;
    pointValue: drizzle_orm_pg_core.PgColumn<{
        name: "point_value";
        tableName: "question";
        dataType: "number";
        columnType: "PgSmallInt";
        data: number;
        driverParam: string | number;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    options: drizzle_orm_pg_core.PgColumn<{
        name: "options";
        tableName: "question";
        dataType: "json";
        columnType: "PgJsonb";
        data: {
            id: string;
            text: string;
            isCorrect: boolean;
            mediaUrl?: string;
            mediaType?: MediaType;
            pointValue?: number;
        }[];
        driverParam: unknown;
        notNull: false;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {
        $type: {
            id: string;
            text: string;
            isCorrect: boolean;
            mediaUrl?: string;
            mediaType?: MediaType;
            pointValue?: number;
        }[];
    }>;
    allowMultipleAnswers: drizzle_orm_pg_core.PgColumn<{
        name: "allow_multiple_answers";
        tableName: "question";
        dataType: "boolean";
        columnType: "PgBoolean";
        data: boolean;
        driverParam: boolean;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    createdAt: drizzle_orm_pg_core.PgColumn<{
        name: "created_at";
        tableName: "question";
        dataType: "string";
        columnType: "PgTimestampString";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    updatedAt: drizzle_orm_pg_core.PgColumn<{
        name: "updated_at";
        tableName: "question";
        dataType: "string";
        columnType: "PgTimestampString";
        data: string;
        driverParam: string;
        notNull: true;
        hasDefault: true;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
    deletedAt: drizzle_orm_pg_core.PgColumn<{
        name: "deleted_at";
        tableName: "question";
        dataType: "string";
        columnType: "PgTimestampString";
        data: string;
        driverParam: string;
        notNull: false;
        hasDefault: false;
        isPrimaryKey: false;
        isAutoincrement: false;
        hasRuntimeDefault: false;
        enumValues: undefined;
        baseColumn: never;
        identity: undefined;
        generated: undefined;
    }, {}, {}>;
}, {
    options: _sinclair_typebox.TOptional<_sinclair_typebox.TUnion<[_sinclair_typebox.TArray<_sinclair_typebox.TObject<{
        id: _sinclair_typebox.TString;
        text: _sinclair_typebox.TString;
        isCorrect: _sinclair_typebox.TBoolean;
        mediaUrl: _sinclair_typebox.TOptional<_sinclair_typebox.TString>;
        mediaType: _sinclair_typebox.TOptional<_sinclair_typebox.TUnion<[_sinclair_typebox.TLiteral<"image">, _sinclair_typebox.TLiteral<"video">, _sinclair_typebox.TLiteral<"audio">, _sinclair_typebox.TLiteral<"file">]>>;
        pointValue: _sinclair_typebox.TOptional<_sinclair_typebox.TNumber>;
    }>>, _sinclair_typebox.TNull]>>;
}>;

export { type InsertQuestion, type Question, type UpdateQuestion, ValidatedInsertQuestion, ValidatedUpdateQuestion };
