{"version":3,"sources":["../../../../src/services/organization/test-session/update-order-session.ts"],"names":["updateOrderSession","testId","sessionIds","id","index","db","testSession","and","eq"],"mappings":"iHAIA,eAAsBA,CAAmBC,CAAAA,CAAAA,CAAgBC,CAAsB,CAAA,CAC7E,MAAM,OAAA,CAAQ,GACZA,CAAAA,CAAAA,CAAW,GAAI,CAAA,MAAOC,CAAIC,CAAAA,CAAAA,GAAU,CAClC,MAAMC,EACH,MAAOC,CAAAA,WAAW,CAClB,CAAA,GAAA,CAAI,CACH,KAAA,CAAOF,EAAQ,CACjB,CAAC,CACA,CAAA,KAAA,CAAMG,GAAIC,CAAAA,EAAAA,CAAGF,YAAY,EAAIH,CAAAA,CAAE,CAAGK,CAAAA,EAAAA,CAAGF,WAAY,CAAA,MAAA,CAAQL,CAAM,CAAC,CAAC,EACtE,CAAC,CACH,EACF","file":"update-order-session.js","sourcesContent":["import db from \"../../../lib/db\";\nimport { testSession } from \"../../../lib/db/schema\";\nimport { and, eq } from \"drizzle-orm\";\n\nexport async function updateOrderSession(testId: string, sessionIds: string[]) {\n  await Promise.all(\n    sessionIds.map(async (id, index) => {\n      await db\n        .update(testSession)\n        .set({\n          order: index + 1, // +1 because order is 1-based\n        })\n        .where(and(eq(testSession.id, id), eq(testSession.testId, testId)));\n    })\n  );\n}\n"]}