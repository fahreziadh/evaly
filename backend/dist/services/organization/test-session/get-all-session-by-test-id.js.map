{"version":3,"sources":["../../../../src/services/organization/test-session/get-all-session-by-test-id.ts"],"names":["getAllSessionByTestId","testId","db","fields","operators","isNull","and","eq"],"mappings":"+BAEA,eAAsBA,CAAsBC,CAAAA,CAAAA,CAAgB,CAU1D,OAAO,CAAE,QATQ,CAAA,MAAMC,CAAG,CAAA,KAAA,CAAM,YAAY,QAAS,CAAA,CACnD,OAAQC,CAAAA,CAAAA,CAAQC,CAAW,CAAA,CACzB,OAAOA,CAAU,CAAA,GAAA,CAAID,CAAO,CAAA,KAAK,CACnC,CAAA,CACA,MAAMA,CAAQ,CAAA,CAAE,MAAAE,CAAAA,CAAAA,CAAQ,GAAAC,CAAAA,CAAAA,CAAK,GAAAC,CAAG,CAAA,CAAG,CACjC,OAAOD,CAAIC,CAAAA,CAAAA,CAAGJ,EAAO,MAAQF,CAAAA,CAAM,CAAGI,CAAAA,CAAAA,CAAOF,CAAO,CAAA,SAAS,CAAC,CAChE,CACF,CAAC,CAEiB,CACpB","file":"get-all-session-by-test-id.js","sourcesContent":["import db from \"../../../lib/db\";\n\nexport async function getAllSessionByTestId(testId: string) {\n  const sessions = await db.query.testSession.findMany({\n    orderBy(fields, operators) {\n      return operators.asc(fields.order);\n    },\n    where(fields, { isNull, and, eq }) {\n      return and(eq(fields.testId, testId), isNull(fields.deletedAt));\n    },\n  });\n\n  return { sessions };\n}\n"]}