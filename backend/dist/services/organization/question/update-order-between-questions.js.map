{"version":3,"sources":["../../../../src/services/organization/question/update-order-between-questions.ts"],"names":["updateOrderBetweenQuestions","questions","q","db","question","eq","isUpdated"],"mappings":"0GAUA,eAAsBA,EACpBC,CACA,CAAA,CAaA,OAZkB,CAAA,MAAM,OAAQ,CAAA,GAAA,CAC9BA,EAAU,GAAI,CAAA,MAAOC,CACZ,EAAA,MAAMC,CACV,CAAA,MAAA,CAAOC,QAAQ,CACf,CAAA,GAAA,CAAI,CACH,KAAA,CAAOF,CAAE,CAAA,KACX,CAAC,CACA,CAAA,KAAA,CAAMG,EAAGD,CAAAA,QAAAA,CAAS,EAAIF,CAAAA,CAAAA,CAAE,UAAU,CAAC,CAAA,CACnC,SAAU,EACd,CACH,CAAA,EAEiB,MAAOI,CAAcA,EAAAA,CAAAA,CAAU,MAAS,CAAA,CAAC,CAC5D","file":"update-order-between-questions.js","sourcesContent":["import db from \"../../../lib/db\";\nimport { question } from \"../../../lib/db/schema\";\nimport { eq } from \"drizzle-orm\";\n\n/* \n    Important: Please validate the owner of the question before using this service\n    This function will update the order of the questions\n    It will take an array of question ids and the new order\n    It will then update the order of the questions in the database\n*/\nexport async function updateOrderBetweenQuestions(\n  questions: { questionId: string; order: number }[]\n) {\n  const isUpdated = await Promise.all(\n    questions.map(async (q) => {\n      return await db\n        .update(question)\n        .set({\n          order: q.order,\n        })\n        .where(eq(question.id, q.questionId))\n        .returning();\n    })\n  );\n\n  return isUpdated.every((isUpdated) => isUpdated.length > 0);\n}\n"]}