{"version":3,"sources":["../../../../src/services/organization/question/create-question.ts"],"names":["createQuestion","listQuestion","db","tx","listQuestionWithOptions","item","insertedQuestion","question","newQuestionId","sql","and","ne","gte","eq"],"mappings":"yHAKA,eAAsBA,EAAeC,CAAgC,CAAA,CACnE,OAAO,MAAMC,CAAG,CAAA,WAAA,CAAY,MAAOC,CAAO,EAAA,CACxC,MAAMC,CAAAA,CAAsC,EAAC,CAC7C,UAAWC,CAAQJ,IAAAA,CAAAA,CAAc,CAO/B,MAAMK,CANoB,CAAA,CAAA,MAAMH,EAC7B,MAAOI,CAAAA,QAAQ,CACf,CAAA,MAAA,CAAO,CACN,GAAGF,CACL,CAAC,CACA,CAAA,SAAA,EACwC,EAAA,EAAA,CAAG,CAAC,CAAA,CAE/C,GAAI,CAACC,CAAAA,CACH,MAAM,IAAI,KAAM,CAAA,2BAA2B,EAG7C,MAAME,CAAAA,CAAgBF,CAAiB,CAAA,EAAA,CAGvC,MAAMH,CAAAA,CACH,OAAOI,QAAQ,CAAA,CACf,GAAI,CAAA,CACH,KAAOE,CAAAA,GAAAA,CAAAA,EAAMF,QAAS,CAAA,KAAK,CAC7B,EAAA,CAAA,CAAC,CACA,CAAA,KAAA,CACCG,GACEC,CAAAA,EAAAA,CAAGJ,SAAS,EAAIC,CAAAA,CAAa,CAC7BI,CAAAA,GAAAA,CAAIL,QAAS,CAAA,KAAA,CAAOF,EAAK,KAAS,EAAA,CAAC,CACnCQ,CAAAA,EAAAA,CAAGN,QAAS,CAAA,WAAA,CAAaF,EAAK,WAAW,CAC3C,CACF,CAAA,CAEFD,CAAwB,CAAA,IAAA,CAAKE,CAAgB,EAC/C,CAEA,OAAOF,CACT,CAAC,CACH","file":"create-question.js","sourcesContent":["import db from \"../../../lib/db\";\nimport { question } from \"../../../lib/db/schema\";\nimport { and, eq, gte, ne, sql } from \"drizzle-orm\";\nimport { InsertQuestion, Question } from \"../../../types/question\";\n\nexport async function createQuestion(listQuestion: InsertQuestion[]) {\n  return await db.transaction(async (tx) => {\n    const listQuestionWithOptions: Question[] = [];\n    for (const item of listQuestion) {\n      const insertNewQuestion = await tx\n        .insert(question)\n        .values({\n          ...item,\n        })\n        .returning();\n      const insertedQuestion = insertNewQuestion.at(0);\n\n      if (!insertedQuestion) {\n        throw new Error(\"Failed to create question\");\n      }\n\n      const newQuestionId = insertedQuestion.id;\n\n      //update order of other question\n      await tx\n        .update(question)\n        .set({\n          order: sql`${question.order}+1`,\n        })\n        .where(\n          and(\n            ne(question.id, newQuestionId),\n            gte(question.order, item.order || 1),\n            eq(question.referenceId, item.referenceId)\n          )\n        );\n\n      listQuestionWithOptions.push(insertedQuestion);\n    }\n\n    return listQuestionWithOptions;\n  });\n}\n"]}