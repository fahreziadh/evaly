{"version":3,"sources":["../../../../src/services/organization/test-session/create-session.ts"],"names":["createSession","testId","count","db","sql","testSession","and","eq","isNull"],"mappings":"gIAIA,eAAsBA,CAAcC,CAAAA,CAAAA,CAAgB,CAClD,KAAM,CAAC,CAAE,MAAAC,CAAM,CAAC,CAAI,CAAA,MAAMC,EACvB,MAAO,CAAA,CACN,KAAOC,CAAAA,GAAAA,CAAAA,QAAAA,CACT,CAAC,CACA,CAAA,IAAA,CAAKC,WAAW,CAAA,CAChB,KAAMC,CAAAA,GAAAA,CAAIC,EAAGF,CAAAA,WAAAA,CAAY,OAAQJ,CAAM,CAAA,CAAGO,MAAOH,CAAAA,WAAAA,CAAY,SAAS,CAAC,CAAC,CAO3E,CAAA,OAAO,CAAE,QALQ,CAAA,MAAMF,CACpB,CAAA,MAAA,CAAOE,WAAW,CAAA,CAClB,MAAO,CAAA,CAAE,OAAAJ,CAAQ,CAAA,KAAA,CAAO,MAAOC,CAAAA,CAAK,EAAI,CAAE,CAAC,CAC3C,CAAA,SAAA,EAEe,CACpB","file":"create-session.js","sourcesContent":["import db from \"../../../lib/db\";\nimport { testSession } from \"../../../lib/db/schema\";\nimport { and, eq, isNull, sql } from \"drizzle-orm/sql\";\n\nexport async function createSession(testId: string) {\n  const [{ count }] = await db\n    .select({\n      count: sql<number>`count(*)`,\n    })\n    .from(testSession)\n    .where(and(eq(testSession.testId, testId), isNull(testSession.deletedAt)));\n\n  const sessions = await db\n    .insert(testSession)\n    .values({ testId, order: Number(count) + 1 })\n    .returning();\n\n  return { sessions };\n}\n"]}