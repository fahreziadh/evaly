name: Deploy SST Application

on:
  push:
    branches:
      - main
      - staging
      - development
  workflow_dispatch:
    inputs:
      stage:
        description: 'Deployment stage'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Determine deployment stage
        id: set-stage
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "STAGE=${{ github.event.inputs.stage }}" >> $GITHUB_ENV
          else
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "STAGE=production" >> $GITHUB_ENV
            elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
              echo "STAGE=staging" >> $GITHUB_ENV
            else
              echo "STAGE=development" >> $GITHUB_ENV
            fi
          fi

      - name: Set environment variables
        run: |
          # Common variables
          echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "AXIOM_API_TOKEN=${{ secrets.AXIOM_API_TOKEN }}" >> $GITHUB_ENV
          echo "AXIOM_DATASET_NAME=${{ secrets.AXIOM_DATASET_NAME }}" >> $GITHUB_ENV
          
          # Development environment variables
          echo "WEB_PUBLIC_URL_DEVELOPMENT=${{ secrets.WEB_PUBLIC_URL_DEVELOPMENT }}" >> $GITHUB_ENV
          echo "DATABASE_URL_DEVELOPMENT=${{ secrets.DATABASE_URL_DEVELOPMENT }}" >> $GITHUB_ENV
          echo "BETTER_AUTH_SECRET_DEVELOPMENT=${{ secrets.BETTER_AUTH_SECRET_DEVELOPMENT }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_URL_DEVELOPMENT=${{ secrets.NEXT_PUBLIC_URL_DEVELOPMENT }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_API_URL_DEVELOPMENT=${{ secrets.NEXT_PUBLIC_API_URL_DEVELOPMENT }}" >> $GITHUB_ENV
          
          # Staging environment variables
          echo "WEB_PUBLIC_URL_STAGING=${{ secrets.WEB_PUBLIC_URL_STAGING }}" >> $GITHUB_ENV
          echo "DATABASE_URL_STAGING=${{ secrets.DATABASE_URL_STAGING }}" >> $GITHUB_ENV
          echo "BETTER_AUTH_SECRET_STAGING=${{ secrets.BETTER_AUTH_SECRET_STAGING }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_URL_STAGING=${{ secrets.NEXT_PUBLIC_URL_STAGING }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_API_URL_STAGING=${{ secrets.NEXT_PUBLIC_API_URL_STAGING }}" >> $GITHUB_ENV
          
          # Production environment variables
          echo "WEB_PUBLIC_URL_PRODUCTION=${{ secrets.WEB_PUBLIC_URL_PRODUCTION }}" >> $GITHUB_ENV
          echo "DATABASE_URL_PRODUCTION=${{ secrets.DATABASE_URL_PRODUCTION }}" >> $GITHUB_ENV
          echo "BETTER_AUTH_SECRET_PRODUCTION=${{ secrets.BETTER_AUTH_SECRET_PRODUCTION }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_URL_PRODUCTION=${{ secrets.NEXT_PUBLIC_URL_PRODUCTION }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_API_URL_PRODUCTION=${{ secrets.NEXT_PUBLIC_API_URL_PRODUCTION }}" >> $GITHUB_ENV
          
          # For backward compatibility with existing code
          echo "WEB_PUBLIC_URL=${{ secrets.WEB_PUBLIC_URL }}" >> $GITHUB_ENV
          echo "DATABASE_URL_PROD=${{ secrets.DATABASE_URL_PROD }}" >> $GITHUB_ENV
          echo "BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_ENVIRONMENT=${{ env.STAGE }}" >> $GITHUB_ENV

      - name: Deploy SST application
        run: bunx sst deploy --stage ${{ env.STAGE }} --verbose
