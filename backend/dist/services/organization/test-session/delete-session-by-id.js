import r from'../../../lib/db';import {testSession,question}from'../../../lib/db/schema';import {eq,sql,and,ne,gte}from'drizzle-orm';async function m(t){const s=(await r.query.testSession.findFirst({columns:{order:true},where(a,u){return u.eq(a.id,t)}}))?.order,n=await r.update(testSession).set({deletedAt:new Date().toISOString(),order:null}).where(eq(testSession.id,t)).returning(),d=await r.update(question).set({deletedAt:new Date().toISOString()}).where(eq(question.referenceId,t)).returning();return n[0]&&s&&await r.update(testSession).set({order:sql`${testSession.order} - 1`}).where(and(eq(testSession.testId,n[0].testId),ne(testSession.id,t),gte(testSession.order,s))),{sessionRowChanges:n.length,questionRowChanges:d.length}}export{m as deleteSessionById};//# sourceMappingURL=delete-session-by-id.js.map
//# sourceMappingURL=delete-session-by-id.js.map