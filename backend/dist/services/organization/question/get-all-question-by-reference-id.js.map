{"version":3,"sources":["../../../../src/services/organization/question/get-all-question-by-reference-id.ts"],"names":["getAllQuestionByReferenceId","referenceId","db","fields","asc","and","eq","isNull"],"mappings":"+BAEA,eAAsBA,CAA4BC,CAAAA,CAAAA,CAAqB,CAUrE,OAAO,CAAE,SATS,CAAA,MAAMC,CAAG,CAAA,KAAA,CAAM,SAAS,QAAS,CAAA,CACjD,OAAQC,CAAAA,CAAAA,CAAQ,CAAE,GAAA,CAAAC,CAAI,CAAA,CAAG,CACvB,OAAOA,CAAID,CAAAA,CAAAA,CAAO,KAAK,CACzB,EACA,KAAMA,CAAAA,CAAAA,CAAQ,CAAE,GAAA,CAAAE,CAAK,CAAA,EAAA,CAAAC,EAAI,MAAAC,CAAAA,CAAO,CAAG,CAAA,CACjC,OAAOF,CAAAA,CAAIC,EAAGH,CAAO,CAAA,WAAA,CAAaF,CAAW,CAAA,CAAGM,CAAOJ,CAAAA,CAAAA,CAAO,SAAS,CAAC,CAC1E,CACF,CAAC,CAEkB,CACrB","file":"get-all-question-by-reference-id.js","sourcesContent":["import db from \"../../../lib/db\";\n\nexport async function getAllQuestionByReferenceId(referenceId: string) {\n  const questions = await db.query.question.findMany({\n    orderBy(fields, { asc }) {\n      return asc(fields.order);\n    },\n    where(fields, { and, eq, isNull }) {\n      return and(eq(fields.referenceId, referenceId), isNull(fields.deletedAt));\n    },\n  });\n  \n  return { questions };\n}\n"]}